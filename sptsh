#!/usr/bin/env python3
import spotify, curses
class SpotifyShell(object):
    def redraw(self):
        self.title = self.spt.title()
        self.album = self.spt.album()
        self.artist = self.spt.artist()
        self.screen.clear()
        self.screen.border()
        self.screen.addstr(2, 2, "Now playing", curses.color_pair(1))
        self.screen.addstr(3, 4, self.title, curses.color_pair(2))
        self.screen.addstr(4, 2, "by", curses.color_pair(1))
        self.screen.addstr(5, 4, self.artist, curses.color_pair(3))
        self.screen.addstr(6, 2, "from", curses.color_pair(1))
        self.screen.addstr(7, 4, self.album, curses.color_pair(4))
        self.screen.refresh()
    def main(self, screen):
        self.screen = screen
        curses.init_pair(1, curses.COLOR_WHITE, curses.COLOR_BLACK)
        curses.init_pair(2, curses.COLOR_RED, curses.COLOR_BLACK)
        curses.init_pair(3, curses.COLOR_GREEN, curses.COLOR_BLACK)
        curses.init_pair(4, curses.COLOR_YELLOW, curses.COLOR_BLACK)
        self.spt = spotify.SpotifyController()
        self.screen.nodelay(1)
        self.redraw()
        while True:
            event = self.screen.getch()
            if event == ord("q"):
                break
            elif event == ord("n"):
                self.spt.forward()
            elif event == ord("b"):
                self.spt.previous()
            if self.title != self.spt.title() or self.album != self.spt.album() or self.artist != self.spt.artist():
                self.redraw()

def main(screen):
    SpotifyShell().main(screen)

if __name__ == '__main__':
    curses.wrapper(main)
